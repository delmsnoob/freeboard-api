let getPosts,getPostById,addPost,updatePostById,deletePostById;_fa8‍.x([["fetchPosts",()=>fetchPosts],["fetchPostById",()=>fetchPostById],["createPost",()=>createPost],["updatePost",()=>updatePost],["deletePost",()=>deletePost]]);_fa8‍.w("../models/postModel",[["getPosts",["getPosts"],function(v){getPosts=v}],["getPostById",["getPostById"],function(v){getPostById=v}],["addPost",["addPost"],function(v){addPost=v}],["updatePostById",["updatePostById"],function(v){updatePostById=v}],["deletePostById",["deletePostById"],function(v){deletePostById=v}]]);

// get all post
       const fetchPosts = (req, res) => {
  getPosts((err, results) => {
    if (err) {
      res.send(err)
    } else {
      res.json(results)
    }
  })
}

// get single post
       const fetchPostById = (req, res) => {
  getPostById(req.params.id, (err, results) => {
    if (err) {
      res.send(err)
    } else {
      res.json(results)
    }
  })
}

// create new post
       const createPost = (req, res) => {
  const data = req.body
  addPost(data, (err, results) => {
    if (err) {
      res.send(err)
    } else {
      res.json(results)
    }
  })
}

// update post by id
       const updatePost = (req, res) => {
  const data = req.body
  const id = req.params.id
  updatePostById(data, id, (err, results) => {
    if (err) {
      res.send(err)
    } else {
      res.json(results)
    }
  })
}

// delete post by id
       const deletePost = (req, res) => {
  const id = req.params.id
  deletePostById(id, (err, results) => {
    if (err) {
      res.send(err)
    } else {
      res.json(results)
    }
  })
}
